O que é uma API?
    - API é um acrônimo para Interface de Programação de Aplicações (Application Programming Interface);
    - Uma forma simples de comunicação entre aplicações;
    - Não necessita de telas, respostas geralmente são em JSON;
    - Independente do front-end, a API não possui ligação com o front;
    - Baseada em requisição e resposta;
    - Podemos criar uma API com Express
O que é REST e RESTful?
    - REST significa Representational State Transfer ou Tranferência Representacional de Estado;
    - Um estilo de arquitetura, que define como as APIs devem ser criadas;
    - Seguindo todos os padrões a API é considerada RESTful;
    - Alguns dos pontos são: respotas uniformes, sem ligação de estado, cache de respostas e outros;
    - Ao longo do curso focaremos em seguir estes padrões
    <https://www.ibm.com/br-pt/topics/rest-apis>
O que é SPA?
    - SPA significa Single Page Application;
    - É quando a aplicação possui um front-end separado do back-end;
    - Ou seja, uma API para o back-end;
    - E um framework front-end JS, como: React, Vue ou Angular;
    - Aplicações deste tipo estão dominando o mercado;
    - E as sessões seguintes tem como objetivo trabalhar focados em SPA;
    - A arquitetura anteriomente utilizada é conhecida como Monolith;
Verbos HTTP
    - Os verbos HTTP andam de mãos dadas com as APIs, e fazem parte do REST;
    - Temos métodos como: GET, POST, PUT, DELETE, PATCH e etc;
    - Cada um representa uma ação na API, ou seja, são essenciais;
    - É muito importante que as nossas funcionalidades usem os métodos corretos;
    - Enviamos o método através da requisição;
Criando uma API com Express
    - Para criar a API teremos uma tarefa bem simples, comparada a estrutura com Handlebars;
    - Basta instalar o Express, ele fará tudo sozinho neste ponto;
    - Depois criaremos uma rota que responde em JSON, este é o dado de comunicação entre aplicação e API;
    - É importante definir o verbo correto, como GET ou POST, por ex;
Conhecendo o Postman
    - O Postman é um client para testes de API;
    - Podemos então criar o back-end antes ou separado do front só com a ajuda deste software;
    - Como você deve imaginar, é fundamental quando estamos criando APIs;
    - Podemos simular verbos, corpo de requisição, inserir headers, tudo que é possível com uma aplicação web;
Testando rota com Postman
    - Para acessar uma rota com o Postman precisamos configurar o client;
    - Devemos inserir o verbo correto para a rota;
    - E também configurar o endpoint, que é a URL onde nossa rota foi estabelecida;
    - Enviando a requisição, receberemos a respota;
Criando uma rota POST
    - Para criar a rota de POST vamos utilizar o método post do Express;
    - Podemos extrair os dados da requisição, acessando req.body;
    - Da mesma maneira que no get, podemos retornar uma resposta como JSON pela API;
Adicionando status na resposta
    - Os status podem ajudar no desevolvimento da nossa aplicação;
    - Exibindo mensagens de sucesso ou erro, por exemplo;
    - Precisamos entre ers e o método json definir um número de status HTTP;
    - Isso é feito por meio do método status;
    <https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Status>
A realidade sobre as APIs
    - A API é desenvolvida de forma muito semelhante a quando criamos projetos com Handlebars, por exemplo;
    - Temos algumas alterações leves, como: resposta apenas por JSON;
    - Mas isso acaba até simplificando as coisas, separando as responsabilidades;
    - Ou seja, reaproveitamos todo o conhecimento visto durante o curso;